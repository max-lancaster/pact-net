{
  "consumer": {
    "name": "PactExtensionsTests-Combined-V4"
  },
  "interactions": [
    {
      "description": "a HTTP request",
      "pending": false,
      "providerStates": [
        {
          "name": "a provider state"
        },
        {
          "name": "another provider state"
        },
        {
          "name": "a provider state with params",
          "params": {
            "baz": "bash",
            "foo": "bar"
          }
        }
      ],
      "request": {
        "body": {
          "content": {
            "bool": true,
            "children": [
              {
                "bool": false,
                "int": 7,
                "string": "bar"
              }
            ],
            "int": 42,
            "string": "foo"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ],
          "X-Request": [
            "request1",
            "request2"
          ]
        },
        "matchingRules": {
          "body": {
            "$.bool": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.children": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type",
                  "min": 1
                }
              ]
            },
            "$.children[*].bool": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.children[*].int": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.children[*].string": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.int": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.string": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "method": "POST",
        "path": "/things",
        "query": {
          "param": [
            "value1",
            "value2"
          ]
        }
      },
      "response": {
        "body": {
          "content": {
            "bool": true,
            "children": [
              {
                "bool": false,
                "int": 7,
                "string": "bar"
              }
            ],
            "int": 42,
            "string": "foo"
          },
          "contentType": "application/json",
          "encoded": false
        },
        "headers": {
          "Content-Type": [
            "application/json"
          ],
          "X-Response": [
            "response1",
            "response2"
          ]
        },
        "status": 201
      },
      "type": "Synchronous/HTTP"
    },
    {
      "contents": {
        "content": {
          "bool": false,
          "int": 1,
          "string": "a description"
        },
        "contentType": "application/json",
        "encoded": false
      },
      "description": "a message",
      "metadata": {
        "queueId": "1234"
      },
      "pending": false,
      "providerStates": [
        {
          "name": "a provider state"
        },
        {
          "name": "another provider state"
        },
        {
          "name": "a provider state with params",
          "params": {
            "baz": "bash",
            "foo": "bar"
          }
        }
      ],
      "type": "Asynchronous/Messages"
    }
  ],
  "metadata": {
    "framework": {
      "language": "C#"
    },
    "pactRust": {
      "ffi": "0.4.27",
      "models": "1.2.8"
    },
    "pactSpecification": {
      "version": "4.0"
    }
  },
  "provider": {
    "name": "PactExtensionsTests-Provider"
  }
}